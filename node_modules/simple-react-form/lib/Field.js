'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _desc, _value, _class, _class2, _temp;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _FieldType = require('./FieldType');

var _omit = require('lodash/omit');

var _omit2 = _interopRequireDefault(_omit);

var _keys = require('lodash/keys');

var _keys2 = _interopRequireDefault(_keys);

var _pick = require('lodash/pick');

var _pick2 = _interopRequireDefault(_pick);

var _get = require('lodash/get');

var _get2 = _interopRequireDefault(_get);

var _autobindDecorator = require('autobind-decorator');

var _autobindDecorator2 = _interopRequireDefault(_autobindDecorator);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {
  var desc = {};
  Object['ke' + 'ys'](descriptor).forEach(function (key) {
    desc[key] = descriptor[key];
  });
  desc.enumerable = !!desc.enumerable;
  desc.configurable = !!desc.configurable;

  if ('value' in desc || desc.initializer) {
    desc.writable = true;
  }

  desc = decorators.slice().reverse().reduce(function (desc, decorator) {
    return decorator(target, property, desc) || desc;
  }, desc);

  if (context && desc.initializer !== void 0) {
    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;
    desc.initializer = undefined;
  }

  if (desc.initializer === void 0) {
    Object['define' + 'Property'](target, property, desc);
    desc = null;
  }

  return desc;
}

var Field = (_class = (_temp = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Field, _React$Component);

  function Field() {
    (0, _classCallCheck3.default)(this, Field);
    return (0, _possibleConstructorReturn3.default)(this, (Field.__proto__ || Object.getPrototypeOf(Field)).apply(this, arguments));
  }

  (0, _createClass3.default)(Field, [{
    key: 'getFieldName',
    value: function getFieldName() {
      if (this.context.parentFieldName) {
        if (this.props.fieldName) {
          return this.context.parentFieldName + '.' + this.props.fieldName;
        } else {
          return this.context.parentFieldName;
        }
      } else {
        return this.props.fieldName;
      }
    }
  }, {
    key: 'onChange',
    value: function onChange(value) {
      this.context.onChange(this.getFieldName(), value);
    }
  }, {
    key: 'getComponent',
    value: function getComponent() {
      return this.props.type;
    }
  }, {
    key: 'getValue',
    value: function getValue() {
      var doc = this.context.doc || {};
      return (0, _get2.default)(doc, this.getFieldName());
    }
  }, {
    key: 'getErrorMessage',
    value: function getErrorMessage() {
      var errorMessages = this.context.errorMessages || {};
      return this.props.errorMessage || errorMessages[this.getFieldName()] || (0, _get2.default)(errorMessages, this.getFieldName());
    }
  }, {
    key: 'getChildProps',
    value: function getChildProps() {
      /**
       * This gets the props that are defined in the propTypes of the registered component.
       */
      var fieldComponent = this.getComponent();
      var propOptions = (0, _omit2.default)(this.props, (0, _keys2.default)(Field.propTypes));
      var allowedKeys = (0, _keys2.default)((0, _extends3.default)({}, _FieldType.propTypes, fieldComponent.propTypes));
      var onlyAllowedOptions = (0, _pick2.default)(propOptions, allowedKeys);

      /**
       * Options that are not registered in the propTypes are passed separatly.
       * This options are in the variable this.passProps of the component, they should be
       * passed to the main component of it.
       */
      allowedKeys.push('type');
      var notDefinedOptions = (0, _omit2.default)(propOptions, allowedKeys);

      var props = (0, _extends3.default)({
        value: this.getValue(),
        onChange: this.onChange,
        errorMessage: this.getErrorMessage(),
        fieldName: this.getFieldName(),
        form: this.context.form,
        passProps: notDefinedOptions,
        ref: 'input'
      }, onlyAllowedOptions);

      return props;
    }
  }, {
    key: 'render',
    value: function render() {
      var component = this.getComponent();
      this.element = _react2.default.createElement(component, this.getChildProps());
      return this.element;
    }
  }]);
  return Field;
}(_react2.default.Component), _class2.propTypes = {
  /**
   * The name of the field in the object.
   */
  fieldName: _propTypes2.default.string.isRequired,

  /**
   * The type of the input. It can be a component
   */
  type: _propTypes2.default.any,

  /**
   * Pass a error message
   */
  errorMessage: _propTypes2.default.string
}, _class2.contextTypes = {
  doc: _propTypes2.default.object,
  onChange: _propTypes2.default.func.isRequired,
  errorMessages: _propTypes2.default.object,
  form: _propTypes2.default.any.isRequired,
  parentFieldName: _propTypes2.default.string
}, _temp), (_applyDecoratedDescriptor(_class.prototype, 'onChange', [_autobindDecorator2.default], Object.getOwnPropertyDescriptor(_class.prototype, 'onChange'), _class.prototype)), _class);
exports.default = Field;